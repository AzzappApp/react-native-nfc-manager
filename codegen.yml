overwrite: true
hooks:
  afterAllFileWrite:
    - prettier --write
ignoreNoDocuments: true
schema:
  - "./packages/data/src/schema/**/*.graphql"
generates:
  ./packages/data/src/schema/__generated__/types.ts:
    plugins:
      - typescript
      - typescript-resolvers
      - "./codegen-typedefs.js"
    config:
      useTypeImports: true
      enumsAsTypes: true
      useImplementingTypes: true
      mappers:
        Profile: ../../domains#Profile as ProfileModel
        StaticMedia: ../../domains#StaticMedia as StaticMediaModel
        CoverTemplate: ../../domains#CoverTemplate as CoverTemplateModel
        ProfileCategory: ../../domains#ProfileCategory as ProfileCategoryModel
        Card: ../../domains#Card as CardModel
        MediaImage: ../../domains#Media as MediaModel
        MediaVideo: ../../domains#Media as MediaModel
        CompanyActivity: ../../domains#CompanyActivity as CompanyActivityModel
        Post: ../../domains#Post as PostModel
        PostComment: ../../domains#PostComment as PostCommentModel
        Interest: ../../domains#Interest as InterestModel
        CardCoverTemplate: Record<string, any>
        CardCover: ../../domains#CardCover as CardCoverModel
        CardModule: ../../domains#CardModule as CardModuleModel
        CardModuleCarousel: ../../domains#CardModule as CardModuleCarouselModel
        CardModuleHorizontalPhoto: ../../domains#CardModule as CardModuleHorizontalPhotoModel
        CardModuleSimpleText: ../../domains#CardModule as CardModuleSimpleTextModel
        CardModuleSimpleTitle: ../../domains#CardModule as CardModuleSimpleTitleModel
        CardModuleSimpleButton: ../../domains#CardModule as CardModuleSimpleButtonModel
        CardModulePhotoWithTextAndTitle: ../../domains#CardModule as CardModulePhotoWithTextAndTitleModel
        CardModuleSocialLinks:  ../../domains#CardModule as CardModuleSocialLinksModel
        CardModuleBlockText: ../../domains#CardModule as CardModuleBlockTextModel
        ContactCard: ../../domains#ContactCard as ContactCardModel
      defaultMapper: 'Partial<{T}>'
      maybeValue: 'T extends PromiseLike<infer U> ? Promise<U | null> : T | null'
      scalars:
        JSON: Record<string, unknown>
        ID: string
      contextType: ../GraphQLContext#GraphQLContext
  ./schema.graphql:
    plugins:
      - schema-ast

diff --git a/node_modules/react-native-version/index.js b/node_modules/react-native-version/index.js
index 345f3d4..76c0640 100644
--- a/node_modules/react-native-version/index.js
+++ b/node_modules/react-native-version/index.js
@@ -58,7 +58,7 @@ function getPlistFilenames(xcode) {
 				});
 			})
 		)
-	);
+	).filter(Boolean);
 }
 
 /**
@@ -197,13 +197,13 @@ function version(program, projectPath) {
 				})
 			});
 		}
-	} catch (err) {}
+	} catch (err) { }
 
 	var android;
 	var ios;
 
 	if (!targets.length || targets.indexOf("android") > -1) {
-		android = new Promise(function(resolve, reject) {
+		android = new Promise(function (resolve, reject) {
 			log({ text: "Versioning Android..." }, programOpts.quiet);
 
 			var gradleFile;
@@ -247,7 +247,7 @@ function version(program, projectPath) {
 						})
 					});
 				} else {
-					gradleFile = gradleFile.replace(/versionCode (\d+)/, function(
+					gradleFile = gradleFile.replace(/versionCode (\d+)/, function (
 						match,
 						cg1
 					) {
@@ -274,7 +274,7 @@ function version(program, projectPath) {
 	}
 
 	if (!targets.length || targets.indexOf("ios") > -1) {
-		ios = new Promise(function(resolve, reject) {
+		ios = new Promise(function (resolve, reject) {
 			log({ text: "Versioning iOS..." }, programOpts.quiet);
 
 			if (isExpoApp) {
@@ -331,21 +331,21 @@ function version(program, projectPath) {
 					reject(
 						stdout.indexOf("directory") > -1
 							? [
-									{
-										style: "red",
-										text: "No project folder found at " + programOpts.ios
-									},
-									{
-										style: "yellow",
-										text: 'Use the "--ios" option to specify the path manually'
-									}
-							  ]
+								{
+									style: "red",
+									text: "No project folder found at " + programOpts.ios
+								},
+								{
+									style: "yellow",
+									text: 'Use the "--ios" option to specify the path manually'
+								}
+							]
 							: [
-									{
-										style: "red",
-										text: stdout
-									}
-							  ]
+								{
+									style: "red",
+									text: stdout
+								}
+							]
 					);
 
 					return;
@@ -442,20 +442,20 @@ function version(program, projectPath) {
 									json,
 									!programOpts.incrementBuild
 										? {
-												CFBundleShortVersionString: getCFBundleShortVersionString(
-													appPkg.version
-												)
-										  }
+											CFBundleShortVersionString: getCFBundleShortVersionString(
+												appPkg.version
+											)
+										}
 										: {},
 									!programOpts.neverIncrementBuild
 										? {
-												CFBundleVersion: getNewVersionCode(
-													programOpts,
-													parseInt(json.CFBundleVersion, 10),
-													appPkg.version,
-													programOpts.resetBuild
-												).toString()
-										  }
+											CFBundleVersion: getNewVersionCode(
+												programOpts,
+												parseInt(json.CFBundleVersion, 10),
+												appPkg.version,
+												programOpts.resetBuild
+											).toString()
+										}
 										: {}
 								)
 							)
@@ -471,21 +471,21 @@ function version(program, projectPath) {
 							<?xml version="1.0" encoding="UTF-8"?>
 							<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
 							<plist version="1.0">` +
-								"\n" +
-								beautify(
-									fs
-										.readFileSync(path.join(programOpts.ios, filename), "utf8")
-										.match(/<dict>[\s\S]*<\/dict>/)[0],
-									Object.assign(
-										{ end_with_newline: true },
-										indent.type === "tab"
-											? { indent_with_tabs: true }
-											: { indent_size: indent.amount }
-									)
-								) +
-								stripIndents`
+							"\n" +
+							beautify(
+								fs
+									.readFileSync(path.join(programOpts.ios, filename), "utf8")
+									.match(/<dict>[\s\S]*<\/dict>/)[0],
+								Object.assign(
+									{ end_with_newline: true },
+									indent.type === "tab"
+										? { indent_with_tabs: true }
+										: { indent_size: indent.amount }
+								)
+							) +
+							stripIndents`
 							</plist>` +
-								"\n"
+							"\n"
 						);
 					});
 				});
@@ -499,21 +499,21 @@ function version(program, projectPath) {
 	}
 
 	return pSettle([android, ios].filter(Boolean))
-		.then(function(result) {
+		.then(function (result) {
 			const errs = result
-				.filter(function(item) {
+				.filter(function (item) {
 					return item.isRejected;
 				})
-				.map(function(item) {
+				.map(function (item) {
 					return item.reason;
 				});
 
 			if (errs.length) {
 				errs
-					.reduce(function(a, b) {
+					.reduce(function (a, b) {
 						return a.concat(b);
 					}, [])
-					.forEach(function(err) {
+					.forEach(function (err) {
 						if (program.outputHelp) {
 							log(
 								Object.assign({ style: "red", text: err.toString() }, err),
@@ -527,9 +527,9 @@ function version(program, projectPath) {
 				}
 
 				throw errs
-					.map(function(errGrp, index) {
+					.map(function (errGrp, index) {
 						return errGrp
-							.map(function(err) {
+							.map(function (err) {
 								return err.text;
 							})
 							.join(", ");
@@ -608,7 +608,7 @@ function version(program, projectPath) {
 
 			return child.execSync("git log -1 --pretty=%H", gitCmdOpts).toString();
 		})
-		.catch(function(err) {
+		.catch(function (err) {
 			if (process.env.RNV_ENV === "ava") {
 				console.error(err);
 			}

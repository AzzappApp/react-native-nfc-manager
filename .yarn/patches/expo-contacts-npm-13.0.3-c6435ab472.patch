diff --git a/ios/Decoding.swift b/ios/Decoding.swift
index 49d6f4866553a83dd1eab0d665e6c12609e03cde..44a9269c0579cbcfbe557c5c56a1afd0da481154 100644
--- a/ios/Decoding.swift
+++ b/ios/Decoding.swift
@@ -34,13 +34,13 @@ func decodeSocialProfiles(_ input: [SocialProfile]?) -> [CNLabeledValue<CNSocial
   var output = [CNLabeledValue<CNSocialProfile>]()
   for item in input {
     let label = decodeLabel(label: item.label)
-    if let urlString = item.url,
-    let username = item.username,
-    let userId = item.userId,
-    let service = item.service {
-      let profile = CNSocialProfile(urlString: urlString.path, username: username, userIdentifier: userId, service: service)
-      output.append(CNLabeledValue(label: label, value: profile))
-    }
+    let urlString = item.url
+    let username = item.username
+    let userId = item.userId
+    let service = item.service
+      
+    let profile = CNSocialProfile(urlString: urlString?.path(), username: username, userIdentifier: userId, service: service)
+    output.append(CNLabeledValue(label: label, value: profile))
   }
   return output
 }
@@ -69,7 +69,7 @@ func decodeUrlAddresses(_ input: [UrlAddress]?) -> [CNLabeledValue<NSString>]? {
   var output = [CNLabeledValue<NSString>]()
   for item in input {
     let label = decodeUrlAddressLabel(item.label)
-    if let urlString = item.url?.path {
+    if let urlString = item.url?.formatted() {
       output.append(CNLabeledValue(label: label, value: urlString as NSString))
     }
   }
diff --git a/ios/Serialization.swift b/ios/Serialization.swift
index 0cbed547fb4380dc9f2edc31051589277a511ae3..bc217048efbae64641e8bec874c6120b21defc02 100644
--- a/ios/Serialization.swift
+++ b/ios/Serialization.swift
@@ -236,7 +236,7 @@ func serializeContact(person: CNContact, keys: [String]?, directory: URL?) throw
     contact[ContactsKey.jobTitle] = person.jobTitle
   }
   if fieldHasValue(field: person.departmentName) {
-    contact[ContactsKey.department] = person.dates
+    contact[ContactsKey.department] = person.departmentName
   }
 
   if keysToFetch.contains(CNContactNamePrefixKey) && fieldHasValue(field: person.namePrefix) {

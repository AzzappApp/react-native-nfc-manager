diff --git a/build/Contacts.d.ts b/build/Contacts.d.ts
index 6bbb8b720d7bfca7e8524392277ecd156e66190a..b8259cc9ccd46dc50a72aefe45e184c1f49cf37d 100644
--- a/build/Contacts.d.ts
+++ b/build/Contacts.d.ts
@@ -632,6 +632,16 @@ export declare function writeContactToFileAsync(contactQuery?: ContactQuery): Pr
  * ```
  */
 export declare function presentFormAsync(contactId?: string | null, contact?: Contact | null, formOptions?: FormOptions): Promise<any>;
+
+/**
+ * Displays contact details from contacts book
+ * @example
+ * ```js
+ * await Contacts.getContactsAsync(contactId);
+ *
+ * ```
+ */
+export declare function displayContactAsync(contactId: string): Promise<boolean>
 /**
  * Add a group to a container.
  * @param groupId The group you want to target.
diff --git a/build/Contacts.js b/build/Contacts.js
index 70b7a29936ff88c6230dc3212f6fa579ce8803f3..d22602dfd66ad5ea2b8677e71ddc2179b2f1ca52 100644
--- a/build/Contacts.js
+++ b/build/Contacts.js
@@ -388,6 +388,22 @@ export async function getPermissionsAsync() {
     }
     return await ExpoContacts.getPermissionsAsync();
 }
+
+/**
+ * Displays contact details from contacts book
+ * @example
+ * ```js
+ * await Contacts.getContactsAsync(contactId);
+ *
+ * ```
+ */
+export async function displayContactAsync(contactId) {
+    if (!ExpoContacts.displayContactAsync) {
+      throw new UnavailabilityError('Contacts', 'displayContactAsync');
+    }
+    return await ExpoContacts.displayContactAsync(contactId);
+  }
+
 /**
  * Asks the user to grant permissions for accessing contacts data.
  * @return A promise that resolves to a [PermissionResponse](#permissionresponse) object.

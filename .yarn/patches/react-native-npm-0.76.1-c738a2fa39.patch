diff --git a/Libraries/Renderer/implementations/ReactFabric-dev.js b/Libraries/Renderer/implementations/ReactFabric-dev.js
index 4d49bcd510e76a9e391deebd046e12d44ea696b7..78964289ea9b264a52979a3ced3a8b1d469d5a65 100644
--- a/Libraries/Renderer/implementations/ReactFabric-dev.js
+++ b/Libraries/Renderer/implementations/ReactFabric-dev.js
@@ -17912,6 +17912,9 @@ to return true:wantsResponderID|                            |
       var transition = ReactCurrentBatchConfig$1.transition;
 
       if (transition !== null) {
+        if (!transition._callbacks) {
+          transition._callbacks = new Set();
+        }
         // Whenever a transition update is scheduled, register a callback on the
         // transition object so we can get the return value of the scope function.
         transition._callbacks.add(handleAsyncAction);
diff --git a/Libraries/Renderer/implementations/ReactFabric-prod.js b/Libraries/Renderer/implementations/ReactFabric-prod.js
index 3e5cf860260b7cf3a50114c805a96d17167f1be0..ad77e4663078a7fd0760cb4762e63904be84d51f 100644
--- a/Libraries/Renderer/implementations/ReactFabric-prod.js
+++ b/Libraries/Renderer/implementations/ReactFabric-prod.js
@@ -7629,13 +7629,18 @@ function requestUpdateLane(fiber) {
   if (0 !== (executionContext & 2) && 0 !== workInProgressRootRenderLanes)
     return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;
   fiber = ReactCurrentBatchConfig$1.transition;
-  null !== fiber && fiber._callbacks.add(handleAsyncAction);
-  if (null !== fiber)
+  if (null !== fiber) {
+    if (!fiber._callbacks) {
+      fiber._callbacks = new Set();
+    }
+    fiber._callbacks.add(handleAsyncAction);
     return (
       0 === currentEventTransitionLane &&
         (currentEventTransitionLane = claimNextTransitionLane()),
       currentEventTransitionLane
     );
+  }
+    
   fiber = currentUpdatePriority;
   if (0 === fiber)
     a: {
diff --git a/Libraries/Renderer/implementations/ReactFabric-profiling.js b/Libraries/Renderer/implementations/ReactFabric-profiling.js
index 0f5fab5c9e1422e02ddb580aa776d62f4ad6ee6e..d3b5efe57cbc61496a60f74e641a40dd6b0a0bfd 100644
--- a/Libraries/Renderer/implementations/ReactFabric-profiling.js
+++ b/Libraries/Renderer/implementations/ReactFabric-profiling.js
@@ -8015,13 +8015,17 @@ function requestUpdateLane(fiber) {
   if (0 !== (executionContext & 2) && 0 !== workInProgressRootRenderLanes)
     return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;
   fiber = ReactCurrentBatchConfig$1.transition;
-  null !== fiber && fiber._callbacks.add(handleAsyncAction);
-  if (null !== fiber)
+  if (null !== fiber) {
+    if (!fiber._callbacks) {
+      fiber._callbacks = new Set();
+    }
+    fiber._callbacks.add(handleAsyncAction);
     return (
       0 === currentEventTransitionLane &&
         (currentEventTransitionLane = claimNextTransitionLane()),
       currentEventTransitionLane
     );
+  }
   fiber = currentUpdatePriority;
   if (0 === fiber)
     a: {

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id          String   @id
  email       String?  @unique
  phoneNumber String?  @unique
  password    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  roles       Json?
}

model Profile {
  id                String       @id
  userId            String
  userName          String       @unique
  firstName         String?
  lastName          String?
  profileKind       ProfileKind?
  companyName       String?
  companyActivityId String?
  colorPalette      String?
  isReady           Boolean      @default(false)
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @default(now())

  @@index([userId])
}

enum ProfileKind {
  personal
  business
  product
}

model Follow {
  followerId  String
  followingId String
  createdAt   DateTime @default(now())

  @@id([followerId, followingId])
  @@index([followingId])
  @@index([followerId])
}

model Media {
  id     String    @id
  kind   MediaKind
  width  Float
  height Float
}

enum MediaKind {
  image
  video
}

model CoverLayer {
  id        String    @id
  kind      LayerKind
  name      String?
  tags      String?
  createdAt DateTime  @default(now())
}

enum LayerKind {
  foreground
  background
}

model Card {
  id        String   @id
  profileId String
  isMain    Boolean
  coverId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([profileId])
}

model CardCover {
  id                 String   @id
  mediaId            String
  mediaStyle         Json
  textPreviewMediaId String
  sourceMediaId      String
  maskMediaId        String?
  backgroundId       String?
  backgroundStyle    Json?
  foregroundId       String?
  foregroundStyle    Json?
  segmented          Boolean
  merged             Boolean
  title              String
  titleStyle         Json?
  subTitle           String?
  subTitleStyle      Json?
  contentStyle       Json?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @default(now())
}

model CardModule {
  id     String @id
  kind   String
  cardId String
  data   Json

  @@index([cardId])
}

model Post {
  id            String   @id
  authorId      String
  medias        Json
  content       String   @db.Text
  allowComments Boolean
  allowLikes    Boolean
  createdAt     DateTime @default(now())

  @@index([authorId])
}

// This is your Prisma schema file
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id          String   @id
  email       String?  @unique
  phoneNumber String?  @unique
  password    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  roles       Json?
}

model Profile {
  id                String      @id
  userId            String
  userName          String      @unique
  profileKind       ProfileKind
  profileCategoryId String?
  firstName         String?
  lastName          String?
  companyName       String?
  companyActivityId String?
  colorPalette      String?
  interests         String?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @default(now())

  @@index([userId])
}

enum ProfileKind {
  personal
  business
}

model ProfileCategory {
  id          String      @id
  profileKind ProfileKind
  labels      Json
  medias      Json
  available   Boolean     @default(true)
  order       Int
}

model CompanyActivity {
  id                String @id
  profileCategoryId String
  labels            Json
  order             Int
}

model Interest {
  id     String @id
  tag    String
  labels Json
}

model Follow {
  followerId  String
  followingId String
  createdAt   DateTime @default(now())

  @@id([followerId, followingId])
  @@index([followingId])
  @@index([followerId])
}

model Media {
  id     String    @id
  kind   MediaKind
  width  Float
  height Float
}

enum MediaKind {
  image
  video
}

model StaticMedia {
  id        String           @id
  usage     StaticMediaUsage
  name      String?
  tags      String?
  available Boolean          @default(true)
  createdAt DateTime         @default(now())
}

enum StaticMediaUsage {
  coverForeground
  coverBackground
  moduleBackground
}

model Card {
  id        String   @id
  profileId String
  isMain    Boolean
  coverId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([profileId])
}

model CardCover {
  id                 String   @id
  mediaId            String
  mediaStyle         Json
  textPreviewMediaId String
  sourceMediaId      String
  maskMediaId        String?
  backgroundId       String?
  backgroundStyle    Json?
  foregroundId       String?
  foregroundStyle    Json?
  segmented          Boolean
  merged             Boolean
  title              String?
  titleStyle         Json?
  subTitle           String?
  subTitleStyle      Json?
  contentStyle       Json?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @default(now())
}

model CardModule {
  id       String  @id
  kind     String
  cardId   String
  data     Json
  position Int
  visible  Boolean @default(true)

  @@index([cardId])
}

model CoverTemplate {
  id                 String      @id
  name               String
  colorPalette       String?
  tags               String?
  data               Json
  segmented          Boolean
  merged             Boolean
  category           Json?
  kind               ProfileKind
  previewMediaId     String?
  suggested          Boolean     @default(false)
  companyActivityIds String?
  enabled            Boolean     @default(true)
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @default(now())
}

model Post {
  id               String   @id
  authorId         String
  medias           Json
  content          String   @db.Text
  allowComments    Boolean
  allowLikes       Boolean
  counterReactions Int      @default(0)
  createdAt        DateTime @default(now())

  @@index([authorId])
}

enum ReactionKind {
  like
}

model PostReaction {
  profileId    String
  postId       String
  reactionKind ReactionKind
  createdAt    DateTime     @default(now())

  @@id([profileId, postId])
  @@index([profileId])
  @@index([postId])
}

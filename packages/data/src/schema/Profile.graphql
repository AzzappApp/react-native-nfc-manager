"""
Represent a Profile
"""
type Profile implements Node {
  id: ID!
  profileRole: ProfileRole!
  """
  The contact card of the Profile
  """
  contactCard: ContactCard
  contactCardIsPrivate: Boolean!
  contactCardDisplayedOnWebCard: Boolean!
  lastContactCardUpdate: DateTime!
  """
  the number of total time the card was scan
  """
  nbContactCardScans: Int
  """
  The related user
  """
  user: User!
  """
  The profile role
  """
  profileRole: ProfileRole!
  """
  The user avatar
  """
  avatar: Media
  """
  True if user has been invited
  """
  invited: Boolean!
  """
  True if user has been promoted to become owner
  """
  promotedAsOwner: Boolean!
  """
  Returns summary of statistics
  """
  statsSummary: [ProfileStatistic!]

  serializedContactCard: SerializedContactCard!

  webCard: WebCard!
}

type SerializedContactCard {
  data: String!
  signature: String!
}

"""
Represent a role for a Profile
"""
enum ProfileRole {
  owner
  admin
  editor
  user
}
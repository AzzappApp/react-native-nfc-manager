"""
Represent a Profile
"""
type Profile implements Node {
  id: ID!
  profileRole: ProfileRole!
  """
  The contact card of the Profile
  """
  contactCard: ContactCard
  contactCardIsPrivate: Boolean!
  contactCardDisplayedOnWebCard: Boolean!
  lastContactCardUpdate: DateTime!
  """
  the number of total time the card was scan
  """
  nbContactCardScans: Int
  """
  The related user
  """
  user: User!
  """
  The profile role
  """
  profileRole: ProfileRole!
  """
  The user avatar
  """
  avatar: Media
  """
  The contact card logo
  """
  logo: Media
  """
  True if user has been invited
  """
  invited: Boolean!
  """
  True if user has received an invite
  """
  inviteSent: Boolean!
  """
  True if user has been promoted to become owner
  """
  promotedAsOwner: Boolean!
  """
  Returns summary of statistics
  """
  statsSummary: [ProfileStatistic!]

  serializedContactCard: String!

  contactCardQrCode(width: Int!) : String!

  contactCardUrl: String!



  webCard: WebCard!

  """
  Return a list of suggested web cards for a given profile
  """
  suggestedWebCards(
    """
    Returns the items in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the first n items from the list.
    """
    first: Int
  ): WebCardConnection!

  """
  Return a list of web cards that the current viewer can be interested in for a given profile
  """
  trendingWebCards(
    """
    Returns the items in the list that come after the specified cursor.
    """
    after: String
    """
    Returns the first n items from the list.
    """
    first: Int @max(value: 50)
  ): WebCardConnection!

  """
  Return a list of trending posts (public ?) at the time of the request for a given profile
  """
  trendingPosts(
    """
    Returns the items in the list that come after the specified cursor.
    """
    after: String
    """
    Returns the first n items from the list.
    """
    first: Int @max(value: 50)
  ): PostConnection!

  """
  Return a list of web cards the current viewer can be interested in for a given profile
  """
  recommendedWebCards(
    """
    Returns the items in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the first n items from the list.
    """
    first: Int @max(value: 50)
  ): WebCardConnection!

  """
  Return a list of posts that match the search query for a given profile
  """
  searchPosts(
    """
    The search query
    """
    search: String!
    """
    if true the location of the viewer will be used to filter the results
    """
    useLocation: Boolean!
    """
    Returns the items in the list that come after the specified cursor.
    """
    after: String
    """
    Returns the first n items from the list.
    """
    first: Int @max(value: 50)
  ): PostConnection!

  """
  Return a list of profiles that match the search query
  """
  searchWebCards(
    """
    The search query
    """
    search: String!
    """
    if true the location of the viewer will be used to filter the results
    """
    useLocation: Boolean!
    """
    Returns the items in the list that come after the specified cursor.
    """
    after: String
    """
    Returns the first n items from the list.
    """
    first: Int @max(value: 50)
  ): WebCardConnection!

  """
  Return a list of cover backgrounds
  """
  coverBackgrounds: [StaticMedia!]!

  """
  Return a list of cover foregrounds
  """
  coverForegrounds: [StaticMedia!]!

  """
  Return a list of module backgrounds
  """
  moduleBackgrounds: [StaticMedia!]!

  """
  Fetches cover templates for a given kind
  """
  coverTemplates(
    kind: CoverTemplateKind!
    first: Int @max(value: 50)
    after: String
  ): CoverTemplateConnection!

  """
  Fetches card styles
  """
  cardStyles(first: Int, after: String): CardStyleConnection!

  """
  Fetches card templates
  """
  cardTemplates(
    cardTemplateTypeId: String
    first: Int @max(value: 50)
    after: String
  ): CardTemplateConnection!

  """
  Fetches card templates Type
  """
  cardTemplateTypes: [CardTemplateType]
  """
  Fetches suggested medias
  """
  suggestedMedias(kind: MediaKind!, first: Int @max(value: 50), after: String): MediaConnection!
  """
  Fetches color palettes
  """
  colorPalettes(first: Int  @max(value: 100), after: String): ColorPaletteConnection!
}

"""
Represent a role for a Profile
"""
enum ProfileRole {
  owner
  admin
  editor
  user
}

enum ProfileSortType {
  ROLE
}

"""
A connection to a list of Profile.
"""
type ProfileConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [ProfileEdge]
}

"""
An edge in a connection.
"""
type ProfileEdge {
  """
  The item at the end of the edge
  """
  node: Profile

  """
  A cursor for use in pagination
  """
  cursor: String!
}

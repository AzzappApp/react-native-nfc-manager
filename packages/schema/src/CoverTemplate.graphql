"""
Template for a cover
"""
type CoverTemplate implements Node {
  """
  The ID of an object
  """
  id: ID!
  order: Float!
  # textLayers: [CoverTemplateTextLayer!]!
  # overlay: CoverTemplateOverlay!
  # mediaFilters: [CoverTemplateMediaFilter!]!
  # links: [CoverTemplateLink!]!
  type: CoverTemplateType
  tags: [CoverTemplateTag!]!
  preview: Media!
  lottie: String!
  requiredMedias: Int!
}

# type CoverTemplateTextLayer {

# }

# type CoverTemplateOverlay {

# }

# type CoverTemplateMediaFilter {

# }

# type CoverTemplateLink {

# }

"""
A connection to a list of items.
"""
type CoverTemplateConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [CoverTemplateEdge]
}
type CoverTemplateByType {
  """
  The ID of an object
  """
  id: ID!
  label: String!
  order: Int!
  # Then, add the templates array as a field of type CoverTemplate.
  data: [CoverTemplate]!
}

"""
An edge in a connection.
"""
type CoverTemplateEdge {
  """
  The item at the end of the edge
  """
  node: CoverTemplateByType

  """
  A cursor for use in pagination
  """
  cursor: String!
}

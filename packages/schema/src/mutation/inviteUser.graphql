extend type Mutation {
  inviteUser(profileId: ID!, sendInvite: Boolean, invited: InviteUserInput!): InviteUserPayload
  inviteUsersList(profileId: ID!, sendInvite: Boolean, invited: [InviteUserEmailInput!]!): InviteUsersListPayload
}

input InviteUserInput {
  phoneNumber: String
  email: String
  profileRole: ProfileRole!
  contactCard: ContactCardInput
}

input InviteUserEmailInput {
  email: String!
  profileRole: ProfileRole
  contactCard: ContactCardInput
}

type InviteUserPayload {
  profile: Profile
}

type InviteUserRejected {
  email: String
  reason: InviteUserRejectedReason!
}

enum InviteUserRejectedReason {
  wrongEmail
  wrongPhoneNumber
  alreadyInvited
  unknownError
}

type InviteUsersListPayload {
  added: [Profile]
  rejected: [InviteUserRejected]
}
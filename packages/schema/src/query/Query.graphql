"""
GraphQL Schema Root Query object
"""
type Query {

  """
  the current user
  """
  currentUser: User

  """
  Fetches an object given its ID
  """
  node(
    """
    The ID of an object
    """
    id: ID!
  ): Node
  """
  Fetches objects given their IDs
  """
  nodes(
  """
    The IDs of objects
    """
    ids: [ID!]!
  ): [Node]!
   """
  Fetches a published webCard given its user name
  """
  webCard(
    """
    The user name of the profile
    """
    userName: String!
  ): WebCard
  """
  Fetches a profile given its user name
  """
  userNameAvailable(
    """
    The user name of the profile
    """
    userName: String!
  ): Boolean! @deprecated(reason: "Use isUserNameAvailable instead")

  """
  get proposed username for a profile given
  """
  getProposedUserName(
    """
    The profile id
    """
    webcardId: String!
  ): String

  """
  Fetches a profile given its user name
  This enhanced version also provide the userName request in result
  """
  isUserNameAvailable(
    """
    The user name of the profile
    """
    userName: String!
  ): isUserNameAvailableResult!

  """
  Return a list of profile categories
  """
  webCardCategories: [WebCardCategory!]!
  """
  Return the webCard parameters
  """
  webCardParameters: WebCardParameters!
  """
  The list of color palettes available in the application
  """
  colorPalettes(first: Int @max(value: 100), after: String): ColorPaletteConnection!
}

type isUserNameAvailableResult {
  """
  The user name of the profile
  """
  userName: String!
  """
  true is userName is available
  """
  available: Boolean!
}

type WebCardParameters {
  userNameChangeFrequencyDay: Int!
}


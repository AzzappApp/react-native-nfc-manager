name: Build and Deploy Azzapp
on:
  push:
    branches:
      - main
      - staging
      - production
jobs:
  continuous-integration :
    name: Validate and test and Build
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
          
      - run: yarn install --frozen-lockfile  --immutable

      - uses: ruby/setup-ruby@v1
        with:
          working-directory: packages/app
          bundler-cache: true
          
      # Testing
      - name: JavaScript build
        run: yarn build

      - name: Lint
        run: yarn lint

      - name: Type check
        run: yarn typecheck

      - name: Test
        run: yarn test

      - name : Fetch the previous query-map.json file from AzzappApp/azzapp-precompiled-queries repository
        uses: actions/checkout@v3
        with: 
          repository: 'AzzappApp/azzapp-precompiled-queries'
          path: 'azzapp-precompiled-queries'
          token: ${{ secrets.QUERY_MAP_PAT }}
          ref: 'main'

      - name: Copy the the previous query-map.json file
        run: cp -R azzapp-precompiled-queries/${{ github.ref_name }}/query-map.json packages/relay  

       # use manual command instead of build command for passing --repersist option to relay
      - name: Force rebuild the query-map.json
        run: yarn relay:build --repersist
        env:
          CI: true  

      - name: Check if there is difference between 2 precompiled query map
        id: query-map-updated
        run: |
          if cmp -s "azzapp-precompiled-queries/${{ github.ref_name }}/query-map.json" "packages/relay/query-map.json"
          then
              echo "QUERY_MAP_UPDATED=false" >> $GITHUB_OUTPUT
          else
              echo "QUERY_MAP_UPDATED=true" >> $GITHUB_OUTPUT
          fi  

      - name: Copy the file back to azzapp-precompiled-queries repository
        if: ${{ steps.query-map-updated.outputs.QUERY_MAP_UPDATED == 'true'}}
        run: cp -r packages/relay/query-map.json azzapp-precompiled-queries/${{ github.ref_name }}
        env:
          CI: true

      # was not able to make a push and commit working on another repo. it was creating a submodule ...
      - uses: peter-evans/create-pull-request@v4
        id: cpr
        if: ${{ steps.query-map-updated.outputs.QUERY_MAP_UPDATED == 'true'}}
        with:
          token: ${{ secrets.QUERY_MAP_PAT }}
          commit-message: 'Update query-map.json'
          title: '[Update] Precompiled Queries on ${{ github.ref_name }}'
          branch: '${{ github.ref_name }}-precompiled-queries'
          base: 'main'
          delete-branch: true 
          labels: 'precompiled-queries'
          reviewers: '@fdecompredon,@batical'
          draft: false
          path: 'azzapp-precompiled-queries'
          branch-suffix: timestamp  # the branch is using a prefix timestamp to avoid issue creating a PR already done before

      # a github action on zzapp-precompiled-queries will delete the branch
      - name: Merging the PR
        if: ${{ steps.query-map-updated.outputs.QUERY_MAP_UPDATED == 'true'}}
        uses: actions/github-script@v6.4.0
        env:
          pull_number: ${{ steps.cpr.outputs.pull-request-number}}
        with:
          github-token: ${{ secrets.QUERY_MAP_PAT }}
          script: |
            const { pull_number} = process.env;
            await github.rest.pulls.merge({
              owner: "AzzappApp",
              repo: "azzapp-precompiled-queries",
              pull_number,
            });

      # Retrieves Vercel url
      - name: Get Vercel Preview Url
        run: node ./scripts/getVercelPreviewUrl.js ${{ github.ref }} ${{ github.event.pull_request.head.sha }}  ${{ secrets.VERCEL_TOKEN }}
        id: vercel_preview_url

      # Appcenter setup
      - name: Set App Center env for staging
        if: github.ref == 'refs/heads/staging'
        run: |
          echo "app_center_ios_app_name=${{ secrets.APPCENTER_STAGING_IOS_APP_NAME }}" >> $GITHUB_ENV
          echo "app_center_ios_api_token=${{ secrets.APPCENTER_STAGING_IOS_API_TOKEN }}" >> $GITHUB_ENV
          echo "app_center_ios_secret=${{ secrets.APPCENTER_STAGING_IOS_APP_SECRET }}" >> $GITHUB_ENV
          echo "app_center_android_app_name=${{ secrets.APPCENTER_STAGING_ANDROID_APP_NAME }}" >> $GITHUB_ENV
          echo "app_center_android_api_token=${{ secrets.APPCENTER_STAGING_ANDROID_API_TOKEN }}" >> $GITHUB_ENV
          echo "app_center_android_secret=${{ secrets.APPCENTER_STAGING_ANDROID_APP_SECRET }}" >> $GITHUB_ENV
          
      - name: Set App Center env for dev
        if: github.ref == 'refs/heads/main'
        run: |
          echo "app_center_ios_app_name=${{ secrets.APPCENTER_DEV_IOS_APP_NAME }}" >> $GITHUB_ENV
          echo "app_center_ios_api_token=${{ secrets.APPCENTER_DEV_IOS_API_TOKEN }}" >> $GITHUB_ENV
          echo "app_center_ios_secret=${{ secrets.APPCENTER_DEV_IOS_APP_SECRET }}" >> $GITHUB_ENV
          echo "app_center_android_app_name=${{ secrets.APPCENTER_DEV_ANDROID_APP_NAME }}" >> $GITHUB_ENV
          echo "app_center_android_api_token=${{ secrets.APPCENTER_DEV_ANDROID_API_TOKEN }}" >> $GITHUB_ENV
          echo "app_center_android_secret=${{ secrets.APPCENTER_DEV_ANDROID_APP_SECRET }}" >> $GITHUB_ENV
 
      # Android Build
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      
      - name: Generate release.keystore
        env:
          ANDROID_KEY_STORE: ${{ secrets.ANDROID_KEY_STORE }}
        run: echo $ANDROID_KEY_STORE | openssl base64 -A -d > ./packages/app/android/app/release.keystore

      - name: Android build apk
        run: yarn build:android
        env:
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      # Android Upload
      
      - name: Android Appcenter upload
        run: yarn deploy:android
        env:
          APPCENTER_OWNER_NAME: azzapp
          APPCENTER_ANDROID_APP_NAME: ${{ env.app_center_android_app_name }}
          APPCENTER_ANDROID_API_TOKEN: ${{ env.app_center_android_api_token }}

      # IOS App build
      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: packages/app/ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('packages/app/ios/Podfile.lock') }}

      - name: Setup faslane AppStore API Key
        run: echo $FASTLANE_APPSTORE_API_KEY | base64 --decode > ./packages/app/fastlane/appstore_api_key.json
        env:
          FASTLANE_APPSTORE_API_KEY: ${{ secrets.FASTLANE_APPSTORE_API_KEY }}

      # - name: Fix FlipperFoly
      #   run: cd packages/app && sh ./scripts/fix-m1-flipper-foly.sh
        
      - name: Setup Xcode env
        run: |
          echo "Setup node for xcode to $(command -v node) and USE_HERMES flag"
          echo "export NODE_BINARY=$(command -v node)" > ./packages/app/ios/.xcode.env
          echo "export USE_HERMES=true" >> ./packages/app/ios/.xcode.env
        
      - name: Build ios application
        run: yarn build:ios
        env:
          CI: true
          MATCH_PASSWORD: ${{ secrets.FASTLANE_MATCH_PASSWORD }}
          GIT_BASIC_AUTH: ${{ secrets.FASTLANE_GIT_BASIC_AUTH }}
          EXPORT_METHOD: "development"
          MATCH_TYPE: "development"
          NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME: "azzapp"
          NEXT_PUBLIC_API_ENDPOINT: "https://${{ steps.vercel_preview_url.outputs.vercel_url }}/api"
          APPCENTER_IOS_APP_SECRET: ${{ env.app_center_ios_secret }}
  
      # IOS App Deployments

      - name: Deploy on App Center
        run: yarn deploy:ios
        env:
          APPCENTER_OWNER_NAME: azzapp
          APPCENTER_IOS_APP_NAME: ${{ env.app_center_ios_app_name }}
          APPCENTER_IOS_API_TOKEN: ${{ env.app_center_ios_api_token }}

      - name: Pull Request deploy command
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          message: |
            Application deployed to Microsoft App Center
            sha: ${{ github.event.pull_request.head.sha }}
            IOS install url: ${{ env.IOS_INSTALL_URL }}
            Android install url: ${{ env.ANDROID_INSTALL_URL }}

name: Build and Deploy Azzapp application
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - staging
      - stable

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  VERCEL_ORG_ID: 'team_nigXfZEKLJrpoK0ZHytix9jX'
  TURBO_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  TURBO_TEAM: 'azzapp'
  PHRASE_ACCESS_TOKEN: ${{ secrets.PHRASE_ACCESS_TOKEN }}
  PAYMENT_API_URL: ${{ vars.PAYMENT_API_URL }}
jobs:
  test-and-update-app:
    environment: ${{(github.ref_name == 'stable' && 'Production') || (github.ref_name == 'staging' && 'Staging') || 'Development' }}
    name: Build, Test and update Azzapp application version, translations and persisted queries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.ADMIN_GITHUB_TOKEN }}

      - name: Setup
        uses: ./.github/actions/setup

      - name: Pull translations
        uses: ./.github/actions/i18n-pull
        with:
          database-host: ${{ vars.DATABASE_HOST }}
          database-username: ${{ vars.DATABASE_USERNAME }}
          database-password: ${{ secrets.DATABASE_PASSWORD }}

      - name: Purge translations key that are not used
        run: yarn i18n:purge
        env:
          DATABASE_HOST: ${{ vars.DATABASE_HOST }}
          DATABASE_USERNAME: ${{ vars.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}

      - name: JavaScript build
        run: yarn build-app-dependencies

      - name: Lint
        run: yarn lint

      - name: Type check
        run: yarn typecheck

      - name: Test
        run: yarn test

      - name: Bump version
        run: |
          NEXT_VERSION=""
          if [ "$GITHUB_REF" == "refs/heads/staging" ]; then
            NEXT_VERSION="rc"
          elif [ "$GITHUB_REF" == "refs/heads/main" ]; then
            NEXT_VERSION="canary"
          fi

          yarn bump-version $NEXT_VERSION
          if [ "$GITHUB_REF" == "refs/heads/main" ]; then
            yarn write-dev-changelog
          fi
        env:
          github_token: ${{ secrets.ADMIN_GITHUB_TOKEN }}

      - name: Force rebuild the query-map.json
        run: yarn relay:build --repersist
        if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/stable'

      - name: Update persisted queries
        id: query-map-updated
        if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/stable'
        run: yarn persist-queries
        # ADD this once we support multiple versions
        env:
          LAST_SUPPORTED_APP_VERSION: ${{ vars.LAST_SUPPORTED_APP_VERSION }}

      - name: Git config
        run: |
          git config user.name "Azzapp Dev Bot"
          git config user.email "azzapp-dev-bot@azzapp.com"
      - name: Commit version bump
        run: |
          git add .
          git commit -m "chore: bump version [skip ci]"
          git push origin $GITHUB_REF_NAME

  deploy-to-vercel:
    environment: ${{(github.ref_name == 'stable' && 'Production') || (github.ref_name == 'staging' && 'Staging') || 'Development' }}
    name: Deploy Azzapp web services to Vercel
    runs-on: ubuntu-latest
    needs: test-and-update-app
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Pull translations
        uses: ./.github/actions/i18n-pull
        with:
          database-host: ${{ vars.DATABASE_HOST }}
          database-username: ${{ vars.DATABASE_USERNAME }}
          database-password: ${{ secrets.DATABASE_PASSWORD }}

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Azzapp Web - Pull Vercel configuration
        env:
          VERCEL_PROJECT_ID: 'azzapp'
        run: |
          ENVIRONMENT="preview"
          ADDITIONAL_ARGS=""
          GITHUB_REF="${{ github.ref }}"
          if [ "$GITHUB_REF" == "refs/heads/stable" ]; then
            ENVIRONMENT="production"
          elif [ "$GITHUB_REF" == "refs/heads/main" ]; then
            ADDITIONAL_ARGS="--git-branch=main"
          fi
          vercel pull --yes --environment=$ENVIRONMENT --token=${{ secrets.VERCEL_TOKEN }} $ADDITIONAL_ARGS

      - name: Azzapp Web - Vercel deployment
        env:
          VERCEL_PROJECT_ID: 'azzapp'
        run: |
          ADDITIONAL_ARGS=""
          GITHUB_REF="${{ github.ref }}"
          if [ "$GITHUB_REF" == "refs/heads/stable" ]; then
            ADDITIONAL_ARGS="--prod"
          fi
          vercel deploy --token=${{ secrets.VERCEL_TOKEN }} --meta githubCommitRef=${{ github.ref_name }} $ADDITIONAL_ARGS

      - name: Azzapp Backoffice - Pull Vercel configuration
        env:
          VERCEL_PROJECT_ID: 'azzapp-backoffice'
        run: |
          ENVIRONMENT="preview"
          ADDITIONAL_ARGS=""
          GITHUB_REF="${{ github.ref }}"
          if [ "$GITHUB_REF" == "refs/heads/stable" ]; then
            ENVIRONMENT="production"
          elif [ "$GITHUB_REF" == "refs/heads/main" ]; then
            ADDITIONAL_ARGS="--git-branch=main"
          fi
          vercel pull --yes --environment=$ENVIRONMENT --token=${{ secrets.VERCEL_TOKEN }} $ADDITIONAL_ARGS

      - name: Azzapp Backoffice - Vercel deployment
        env:
          VERCEL_PROJECT_ID: 'azzapp-backoffice'
        run: |
          ADDITIONAL_ARGS=""
          GITHUB_REF="${{ github.ref }}"
          if [ "$GITHUB_REF" == "refs/heads/stable" ]; then
            ADDITIONAL_ARGS="--prod"
          fi
          rm -fr ./packages/web/.next
          vercel deploy --token=${{ secrets.VERCEL_TOKEN }} --meta githubCommitRef=${{ github.ref_name }} $ADDITIONAL_ARGS
  buid-ios:
    environment: ${{(github.ref_name == 'stable' && 'Production') || (github.ref_name == 'staging' && 'Staging') || 'Development' }}
    name: Build native iOS application
    runs-on: macos-latest-xlarge
    needs:
      - test-and-update-app
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Pull translations
        uses: ./.github/actions/i18n-pull
        with:
          database-host: ${{ vars.DATABASE_HOST }}
          database-username: ${{ vars.DATABASE_USERNAME }}
          database-password: ${{ secrets.DATABASE_PASSWORD }}

      - name: JavaScript build
        run: yarn build-app-dependencies

      - uses: ruby/setup-ruby@v1
        with:
          working-directory: packages/app
          bundler-cache: true

      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: packages/app/ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('packages/app/ios/Podfile.lock') }}

      - name: Pod install
        working-directory: packages/app/ios
        run: bundle exec pod install

      - name: Setup Xcode env
        run: |
          echo "Setup node for xcode to $(command -v node)"
          echo "export NODE_BINARY=$(command -v node)" > ./packages/app/ios/.xcode.env
          echo "export NODE_BINARY=$(command -v node)" > ./packages/app/ios/.xcode.env.local

      - name: Build ios application
        working-directory: packages/app
        run: yarn build:ios
        env:
          NEXT_PUBLIC_URL: ${{ vars.NEXT_PUBLIC_URL }}
          NEXT_PUBLIC_API_ENDPOINT: ${{ vars.NEXT_PUBLIC_API_ENDPOINT }}
          DEPLOYMENT_ENVIRONMENT: ${{ vars.NEXT_PUBLIC_PLATFORM }}
          PURCHASE_IOS_KEY: ${{ vars.PURCHASE_IOS_KEY }}
          PURCHASE_ANDROID_KEY: ${{ vars.PURCHASE_ANDROID_KEY }}
          APP_WEBSHARED_CREDENTIALS: ${{ vars.APP_WEBSHARED_CREDENTIALS }}
          SENTRY_DSN: 'https://13a33b3788344ceea14cf298a220fead@o4505353883680768.ingest.sentry.io/4505358469038080'
          TERMS_OF_SERVICE: https://web.azzapp.com/legal/terms-of-service
          PRIVACY_POLICY: https://web.azzapp.com/legal/privacy
          ABOUT: https://web.azzapp.com/company/about_us
          FAQ: https://web.azzapp.com/company/faq
          IOS_APP_IDENTIFIER: ${{ vars.IOS_APP_IDENTIFIER }}
          IOS_APPCLIP_IDENTIFIER: ${{ vars.IOS_APPCLIP_IDENTIFIER }}
          IOS_SCHEME: ${{ vars.IOS_SCHEME }}
          IOS_PROFILE_ID: ${{ vars.IOS_PROFILE_ID }}
          IOS_PROFILECLIP_ID: ${{ vars.IOS_PROFILECLIP_ID }}
          IOS_APPCLIP_SCHEME: ${{ vars.IOS_APPCLIP_SCHEME }}
          IOS_CODE_SIGNING_IDENTITY: ${{ vars.IOS_CODE_SIGNING_IDENTITY }}
          IOS_EXPORT_METHOD: ${{ vars.IOS_EXPORT_METHOD }}
          IOS_CERTIFICATE_P12_PASSWORD: ${{ secrets.IOS_CERTIFICATE_P12_PASSWORD }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}

      - name: Upload ios artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.IOS_SCHEME }}.ipa
          path: packages/app/fastlane/builds/${{ vars.IOS_SCHEME }}.ipa

      - name: Upload ios dSYM
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.IOS_SCHEME }}.app.dSYM.zip
          path: packages/app/fastlane/builds/${{ vars.IOS_SCHEME }}.app.dSYM.zip

      - name: Upload to TestFlight
        working-directory: packages/app
        run: bundle exec fastlane deploy
        env:
          IOS_APP_IDENTIFIER: ${{ vars.IOS_APP_IDENTIFIER }}
          IOS_SCHEME: ${{ vars.IOS_SCHEME }}
          IOS_PROFILE_ID: ${{ vars.IOS_PROFILE_ID }}
          IOS_CODE_SIGNING_IDENTITY: ${{ vars.CODE_SIGNING_IDENTITY }}
          IOS_EXPORT_METHOD: ${{ vars.IOS_EXPORT_METHOD }}
          IOS_CERTIFICATE_P12_PASSWORD: ${{ secrets.IOS_CERTIFICATE_P12_PASSWORD }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
  buid-android:
    environment: ${{(github.ref_name == 'stable' && 'Production') || (github.ref_name == 'staging' && 'Staging') || 'Development' }}
    name: Build native Android application
    runs-on: ubuntu-latest
    env:
      RUBYOPT: -rostruct
    needs:
      - test-and-update-app
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Pull translations
        uses: ./.github/actions/i18n-pull
        with:
          database-host: ${{ vars.DATABASE_HOST }}
          database-username: ${{ vars.DATABASE_USERNAME }}
          database-password: ${{ secrets.DATABASE_PASSWORD }}

      - name: JavaScript build
        run: yarn build-app-dependencies

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7.6' #hot fix for android fastlane ubuntu
          working-directory: packages/app
          bundler-cache: true

      - name: force Install fastlane
        run: |
          cd packages/app && bundle install --jobs 4 --retry 3

      - name: Configure Keystore
        run: |
          echo "$ANDROID_KEYSTORE_FILE" > keystore.jks.b64
          base64 -d -i keystore.jks.b64 > keystore.jks
          echo "storeFile=keystore.jks" >> keystore.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> keystore.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> keystore.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> keystore.properties
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}

      - name: Create Google Play Config file
        run: |
          echo "$PLAYSTORE_SERVICE_SECRET" > play_config.json.b64
          base64 -d -i play_config.json.b64 > ${{ github.workspace }}/play_config.json
        env:
          PLAYSTORE_SERVICE_SECRET: ${{ secrets.PLAYSTORE_SERVICE_SECRET }}

      - name: Build android application
        run: yarn build:android
        working-directory: packages/app
        env:
          NEXT_PUBLIC_URL: ${{ vars.NEXT_PUBLIC_URL }}
          NEXT_PUBLIC_API_ENDPOINT: ${{ vars.NEXT_PUBLIC_API_ENDPOINT }}
          DEPLOYMENT_ENVIRONMENT: ${{ vars.NEXT_PUBLIC_PLATFORM }}
          PURCHASE_ANDROID_KEY: ${{ vars.PURCHASE_ANDROID_KEY }}
          APP_WEBSHARED_CREDENTIALS: ${{ vars.APP_WEBSHARED_CREDENTIALS }}
          SENTRY_DSN: 'https://13a33b3788344ceea14cf298a220fead@o4505353883680768.ingest.sentry.io/4505358469038080'
          TERMS_OF_SERVICE: https://web.azzapp.com/legal/terms-of-service
          PRIVACY_POLICY: https://web.azzapp.com/legal/privacy
          ABOUT: https://web.azzapp.com/company/about_us
          FAQ: https://web.azzapp.com/company/faq
          ANDROID_APP_IDENTIFIER: ${{ vars.ANDROID_APP_IDENTIFIER }}
          ANDROID_BUILD_TASK: ${{ vars.ANDROID_BUILD_TASK }}
          ANDROID_KEYSTORE_PATH: ${{ github.workspace }}/keystore.jks
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          PLAY_CONFIG_PATH: ${{ github.workspace }}/play_config.json

      - name: Upload android artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ vars.ANDROID_BUILD_TASK }}-release.aab
          path: ${{ github.workspace }}/packages/app/android/app/build/outputs/bundle/${{ vars.ANDROID_BUILD_TASK }}Release/app-${{ vars.ANDROID_BUILD_TASK }}-release.aab

      - name: Deploy android application
        run: bundle exec fastlane android deploy
        working-directory: packages/app
        env:
          DEPLOYMENT_ENVIRONMENT: ${{ vars.NEXT_PUBLIC_PLATFORM }}
          ANDROID_APP_IDENTIFIER: ${{ vars.ANDROID_APP_IDENTIFIER }}
          ANDROID_BUILD_TASK: ${{ vars.ANDROID_BUILD_TASK }}
          ANDROID_KEYSTORE_PATH: ${{ github.workspace }}/keystore.jks
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          PLAY_CONFIG_PATH: ${{ github.workspace }}/play_config.json
          AAB_PATH: ${{ github.workspace }}/packages/app/android/app/build/outputs/bundle/${{ vars.ANDROID_BUILD_TASK }}Release/app-${{ vars.ANDROID_BUILD_TASK }}-release.aab
